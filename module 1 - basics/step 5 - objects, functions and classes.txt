Objects are a data type offered by some languages, but the principles of objects are useful.
Objects are things. They can have attributes, called properties/fields corresponding to data types and methods, which are functions assigned to an object/class. Similar to dictionaries, properties/method names must be unique.

// object describing an event
event = {
    name:"Lollapalooza",
    attendance:60000,
    location:"Chicago" // properties can be single values
    vendors:["Coke","Five Guys","Shelby's"], // properties can be lists
    signup:(name,address) => { // method, see more below
        print("hello")
        print(name) // Alicia
        print("we are sending tickets to")
        print(address) // 1234 Dallas TX
        print("see you at the show!")
    }
}


event.name // get Lollapalooza
event.signup("Alicia","1234 Dallas TX")

function signupAsAFunction(name,address){ 
        print("hello")
        print(name)
        print("we are sending tickets to")
        print(address)
        print("see you at the show!")
    }

signupAsAFunction()

In coding, we have 2 different ways of writing callable blocks of instructions/tasks. 
Functions are callable blocks that will (usually) execute from top to bottom.

function greeting(){
    name = "Margaret" // execute 1st
    print("Nice to meet you") // execute 2nd
    print(name) // execute 3rd
}


Methods are blocks of code attached to objects that can be called to. 

Classes are instructions/blueprints for Objects. They define what shapes object have and their core purpose.
Objects are created when a class is instantiated, usually with a constructor.

class Event {
    // what makes up an event?
    attendance:number
    nameOfEvent:string
    location:string
    vendors:string[]

    constructor(){}
}